/* eslint-disable no-magic-numbers */

// eslint-disable-next-line no-undef
module.exports = {
  env: {
    browser: true,
    es2021: true,
  },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
  ],
  parserOptions: {
    ecmaFeatures: { jsx: true },
    ecmaVersion: 12,
    sourceType: 'module',
  },
  plugins: ['react', 'import'],
  rules: {
    // Possible Problems
    'array-callback-return': 'error',
    'no-await-in-loop': 'error',
    'no-constructor-return': 'error',
    'no-duplicate-imports': 'error',
    'no-promise-executor-return': 'error',
    'no-self-compare': 'error',
    'no-template-curly-in-string': 'error',
    'no-unmodified-loop-condition': 'error',
    'no-use-before-define': 'error',
    'require-atomic-updates': 'error',

    // Suggestions
    'arrow-body-style': 'error',
    'block-scoped-var': 'error',
    'camelcase': ['error', { ignoreImports: true }],
    'capitalized-comments': 'error',
    'curly': ['error', 'multi', 'consistent'],
    'default-case-last': 'error',
    'dot-notation': 'error',
    'eqeqeq': 'error',
    'func-name-matching': 'error',
    'func-names': 'error',
    'func-style': ['error', 'declaration', { allowArrowFunctions: true }],
    'multiline-comment-style': 'error',
    'no-alert': 'error',
    'no-array-constructor': 'error',
    'no-caller': 'error',
    'no-console': 'error',
    'no-else-return': ['error', { allowElseIf: false }],
    'no-empty-function': 'error',
    'no-eval': 'error',
    'no-extend-native': 'error',
    'no-extra-bind': 'error',
    'no-floating-decimal': 'error',
    'no-implicit-coercion': 'error',
    'no-implicit-globals': 'error',
    'no-implied-eval': 'error',
    'no-inline-comments': 'error',
    'no-invalid-this': 'error',
    'no-iterator': 'error',
    'no-labels': 'error',
    'no-lone-blocks': 'error',
    'no-lonely-if': 'error',
    'no-loop-func': 'error',
    'no-magic-numbers': [
      'error',
      {
        ignore: [1],
        ignoreArrayIndexes: true,
        ignoreDefaultValues: true,
        enforceConst: true,
        detectObjects: true,
      },
    ],
    'no-mixed-operators': 'error',
    'no-multi-assign': 'error',
    'no-multi-str': 'error',
    'no-negated-condition': 'error',
    'no-nested-ternary': 'error',
    'no-new': 'error',
    'no-new-func': 'error',
    'no-new-object': 'error',
    'no-new-wrappers': 'error',
    'no-param-reassign': 'error',
    'no-proto': 'error',
    'no-return-assign': 'error',
    'no-return-await': 'error',
    'no-script-url': 'error',
    'no-sequences': 'error',
    'no-shadow': 'error',
    'no-throw-literal': 'error',
    'no-underscore-dangle': 'error',
    'no-unused-expressions': 'error',
    'no-useless-call': 'error',
    'no-useless-computed-key': 'error',
    'no-useless-concat': 'error',
    'no-useless-constructor': 'error',
    'no-useless-rename': 'error',
    'no-useless-return': 'error',
    'no-var': 'error',
    'no-void': 'error',
    'object-shorthand': 'error',
    'operator-assignment': 'error',
    'one-var': ['error', 'never'],
    'prefer-arrow-callback': 'error',
    'prefer-const': 'error',
    'prefer-exponentiation-operator': 'error',
    'prefer-named-capture-group': 'error',
    'prefer-numeric-literals': 'error',
    'prefer-object-spread': 'error',
    'prefer-promise-reject-errors': 'error',
    'prefer-regex-literals': 'error',
    'prefer-rest-params': 'error',
    'prefer-spread': 'error',
    'prefer-template': 'error',
    'quote-props': ['error', 'consistent-as-needed'],
    'require-await': 'error',
    'require-unicode-regexp': 'error',
    'spaced-comment': 'error',
    'symbol-description': 'error',
    'yoda': 'error',

    // Layout & Formatting
    'array-bracket-newline': 'error',
    'array-bracket-spacing': 'error',
    'array-element-newline': ['error', 'consistent'],
    'arrow-parens': ['error', 'always'],
    'arrow-spacing': 'error',
    'block-spacing': ['error', 'always'],
    'brace-style': 'error',
    'comma-dangle': ['error', 'always-multiline'],
    'comma-spacing': 'error',
    'comma-style': 'error',
    'computed-property-spacing': 'error',
    'dot-location': ['error', 'property'],
    'eol-last': 'error',
    'func-call-spacing': 'error',
    'function-call-argument-newline': ['error', 'consistent'],
    'function-paren-newline': 'error',
    'generator-star-spacing': ['error', { before: false, after: true }],
    'implicit-arrow-linebreak': 'error',
    'indent': ['error', 2],
    'jsx-quotes': ['error', 'prefer-single'],
    'key-spacing': 'error',
    'keyword-spacing': 'error',
    'line-comment-position': 'error',
    'linebreak-style': ['error', 'unix'],
    'lines-around-comment': [
      'error',
      {
        beforeBlockComment: true,
        beforeLineComment: true,
        allowArrayStart: true,
        allowBlockStart: true,
        allowClassStart: true,
        allowObjectStart: true,
      },
    ],
    'max-len': 'error',
    'max-statements-per-line': 'error',
    'new-parens': 'error',
    'no-extra-parens': 'error',
    'no-multi-spaces': 'error',
    'no-multiple-empty-lines': 'error',
    'no-trailing-spaces': 'error',
    'no-whitespace-before-property': 'error',
    'nonblock-statement-body-position': 'error',
    'object-curly-newline': ['error', { multiline: true }],
    'object-curly-spacing': ['error', 'always'],
    'operator-linebreak': ['error', 'after'],
    'padded-blocks': ['error', 'never'],
    'padding-line-between-statements': [
      'error',
      { blankLine: 'always', prev: '*', next: 'return' },
    ],
    'quotes': ['error', 'single'],
    'rest-spread-spacing': 'error',
    'semi': 'error',
    'semi-style': 'error',
    'space-before-blocks': 'error',
    'space-before-function-paren': ['error', 'never'],
    'space-infix-ops': 'error',
    'space-unary-ops': 'error',
    'switch-colon-spacing': 'error',
    'template-curly-spacing': ['error', 'always'],
    'template-tag-spacing': ['error', 'always'],
    'wrap-iife': 'error',
    'yield-star-spacing': 'error',

    // React
    'react/boolean-prop-naming': 'error',
    'react/button-has-type': 'error',
    'react/default-props-match-prop-types': 'error',
    'react/destructuring-assignment': ['error', 'never'],
    'react/forbid-component-props': 'error',
    'react/forbid-dom-props': 'error',
    'react/forbid-foreign-prop-types': 'error',
    'react/no-access-state-in-setstate': 'error',
    'react/no-array-index-key': 'error',
    'react/no-danger': 'error',
    'react/no-did-mount-set-state': 'error',
    'react/no-did-update-set-state': 'error',
    'react/no-invalid-html-attribute': 'error',
    'react/no-multi-comp': 'error',
    'react/no-namespace': 'error',
    'react/no-redundant-should-component-update': 'error',
    'react/no-this-in-sfc': 'error',
    'react/no-typos': 'error',
    'react/no-unsafe': 'error',
    'react/no-unstable-nested-components': 'error',
    'react/no-unused-class-component-methods': 'error',
    'react/no-unused-prop-types': 'error',
    'react/no-unused-state': 'error',
    'react/no-will-update-set-state': 'error',
    'react/prefer-es6-class': 'error',
    'react/prefer-read-only-props': 'error',
    'react/react-in-jsx-scope': 'off',
    'react/self-closing-comp': 'error',
    'react/sort-comp': 'error',
    'react/sort-prop-types': 'error',
    'react/state-in-constructor': 'error',
    'react/void-dom-elements-no-children': 'error',

    // JSX
    'react/jsx-boolean-value': 'error',
    'react/jsx-closing-bracket-location': ['error', 'after-props'],
    'react/jsx-curly-brace-presence': 'error',
    'react/jsx-curly-newline': 'error',
    'react/jsx-curly-spacing': ['error', 'always'],
    'react/jsx-equals-spacing': 'error',
    'react/jsx-filename-extension': ['error', { extensions: ['tsx', 'jsx'] }],
    'react/jsx-first-prop-new-line': ['error', 'never'],
    'react/jsx-handler-names': 'error',
    'react/jsx-indent': [
      'error',
      2,
      { checkAttributes: true, indentLogicalExpressions: true },
    ],
    'react/jsx-indent-props': ['error', 'first'],
    'react/jsx-max-props-per-line': [
      'error',
      { maximum: 1, when: 'multiline' },
    ],
    'react/jsx-newline': 'error',
    'react/jsx-no-bind': 'error',
    'react/jsx-no-constructed-context-values': 'error',
    'react/jsx-no-script-url': 'error',
    'react/jsx-no-useless-fragment': 'error',
    'react/jsx-one-expression-per-line': 'error',
    'react/jsx-pascal-case': 'error',
    'react/jsx-props-no-multi-spaces': 'error',
    'react/jsx-props-no-spreading': 'error',
    'react/jsx-tag-spacing': 'error',
    'react/jsx-wrap-multilines': 'error',

    'import/order': [
      'error', {
        'alphabetize': {
          order: 'asc',
          caseInsensitive: true,
        },
        'groups': [
          'builtin',
          'external',
          'index',
          'object',
          'type',
          'internal',
          'parent',
          'sibling',
        ],
        'newlines-between': 'always',
        'warnOnUnassignedImports': true,
      },
    ],
  },
  overrides: [
    {
      extends: ['plugin:@typescript-eslint/recommended'],
      files: ['**/*.ts', '**/*.tsx'],
      parser: '@typescript-eslint/parser',
      parserOptions: { project: ['./tsconfig.json'] },
      plugins: ['@typescript-eslint'],
      rules: {
        // Typescript
        '@typescript-eslint/array-type': 'error',
        '@typescript-eslint/class-literal-property-style': 'error',
        '@typescript-eslint/consistent-indexed-object-style': 'error',
        '@typescript-eslint/consistent-type-assertions': 'error',
        '@typescript-eslint/consistent-type-definitions': 'error',
        '@typescript-eslint/consistent-type-exports': 'error',
        '@typescript-eslint/consistent-type-imports': 'error',
        '@typescript-eslint/explicit-function-return-type': 'error',
        '@typescript-eslint/explicit-member-accessibility': 'error',
        '@typescript-eslint/explicit-module-boundary-types': 'error',
        '@typescript-eslint/member-delimiter-style': 'error',
        '@typescript-eslint/method-signature-style': 'error',
        '@typescript-eslint/naming-convention': 'error',
        '@typescript-eslint/no-base-to-string': 'error',
        '@typescript-eslint/no-confusing-non-null-assertion': 'error',
        '@typescript-eslint/no-confusing-void-expression': 'error',
        '@typescript-eslint/no-dynamic-delete': 'error',
        '@typescript-eslint/no-extraneous-class': 'error',
        '@typescript-eslint/no-invalid-void-type': 'error',
        '@typescript-eslint/no-meaningless-void-operator': 'error',
        '@typescript-eslint/no-non-null-asserted-nullish-coalescing': 'error',
        '@typescript-eslint/no-parameter-properties': 'error',
        '@typescript-eslint/no-require-imports': 'error',
        '@typescript-eslint/no-type-alias': 'error',
        '@typescript-eslint/no-unnecessary-boolean-literal-compare': 'error',
        '@typescript-eslint/no-unnecessary-condition': 'error',
        '@typescript-eslint/no-unnecessary-qualifier': 'error',
        '@typescript-eslint/no-unnecessary-type-arguments': 'error',
        '@typescript-eslint/non-nullable-type-assertion-style': 'error',
        '@typescript-eslint/prefer-for-of': 'error',
        '@typescript-eslint/prefer-function-type': 'error',
        '@typescript-eslint/prefer-includes': 'error',
        '@typescript-eslint/prefer-literal-enum-member': 'error',
        '@typescript-eslint/prefer-nullish-coalescing': 'error',
        '@typescript-eslint/prefer-optional-chain': 'error',
        '@typescript-eslint/prefer-readonly': 'error',
        '@typescript-eslint/prefer-readonly-parameter-types': 'error',
        '@typescript-eslint/prefer-reduce-type-parameter': 'error',
        '@typescript-eslint/prefer-return-this-type': 'error',
        '@typescript-eslint/prefer-string-starts-ends-with': 'error',
        '@typescript-eslint/prefer-ts-expect-error': 'error',
        '@typescript-eslint/promise-function-async': 'error',
        '@typescript-eslint/switch-exhaustiveness-check': 'error',
        '@typescript-eslint/type-annotation-spacing': 'error',
        '@typescript-eslint/unified-signatures': 'error',

        // Typescript extension rules
        '@typescript-eslint/brace-style': 'error',
        'brace-style': 'off',
        '@typescript-eslint/comma-dangle': ['error', 'always-multiline'],
        'comma-dangle': 'off',
        '@typescript-eslint/comma-spacing': 'error',
        'comma-spacing': 'off',
        '@typescript-eslint/dot-notation': 'error',
        'dot-notation': 'off',
        '@typescript-eslint/func-call-spacing': 'error',
        'func-call-spacing': 'off',
        '@typescript-eslint/indent': [
          'error', 2, {
            ignoredNodes:
        ['JSXElement *', 'JSXElement'],
          },
        ],
        'indent': 'off',
        '@typescript-eslint/keyword-spacing': 'error',
        'keyword-spacing': 'off',
        '@typescript-eslint/no-array-constructor': 'error',
        'no-array-constructor': 'off',
        '@typescript-eslint/no-dupe-class-members': 'error',
        'no-dupe-class-members': 'off',
        '@typescript-eslint/no-duplicate-imports': 'error',
        'no-duplicate-imports': 'off',
        '@typescript-eslint/no-empty-function': 'error',
        'no-empty-function': 'off',
        '@typescript-eslint/no-extra-parens': 'error',
        'no-extra-parens': 'off',
        '@typescript-eslint/no-extra-semi': 'error',
        'no-extra-semi': 'off',
        '@typescript-eslint/no-implied-eval': 'error',
        'no-implied-eval': 'off',
        '@typescript-eslint/no-invalid-this': 'error',
        'no-invalid-this': 'off',
        '@typescript-eslint/no-loop-func': 'error',
        'no-loop-func': 'off',
        '@typescript-eslint/no-loss-of-precision': 'error',
        'no-loss-of-precision': 'off',
        '@typescript-eslint/no-magic-numbers': 'error',
        'no-magic-numbers': 'off',
        '@typescript-eslint/no-redeclare': 'error',
        'no-redeclare': 'off',
        '@typescript-eslint/no-shadow': 'error',
        'no-shadow': 'off',
        '@typescript-eslint/no-throw-literal': 'error',
        'no-throw-literal': 'off',
        '@typescript-eslint/no-unused-expressions': 'error',
        'no-unused-expressions': 'off',
        '@typescript-eslint/no-unused-vars': 'error',
        'no-unused-vars': 'off',
        '@typescript-eslint/no-use-before-define': 'error',
        'no-use-before-define': 'off',
        '@typescript-eslint/no-useless-constructor': 'error',
        'no-useless-constructor': 'off',
        '@typescript-eslint/object-curly-spacing': ['error', 'always'],
        'object-curly-spacing': 'off',
        '@typescript-eslint/padding-line-between-statements': [
          'error',
          { blankLine: 'always', prev: '*', next: 'return' },
        ],
        'padding-line-between-statements': 'off',
        '@typescript-eslint/quotes': ['error', 'single'],
        'quotes': 'off',
        '@typescript-eslint/require-await': 'error',
        'require-await': 'off',
        '@typescript-eslint/semi': 'error',
        'semi': 'off',
        '@typescript-eslint/space-before-function-paren': ['error', 'never'],
        'space-before-function-paren': 'off',
        '@typescript-eslint/space-infix-ops': 'error',
        'space-infix-ops': 'off',
      },
    },
  ],
};
